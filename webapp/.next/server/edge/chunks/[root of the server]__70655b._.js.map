{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\n\nexport async function middleware(request: NextRequest) {\n    const availablePathNames = [\n        '/',\n        '/auth',\n        '/item',\n        '/settings',\n        '/user',\n        '/help'\n    ];\n    const protectedRoutes = [\n        '/settings',\n        '/user/me',\n    ];\n\n    console.log(protectedRoutes.includes(new URL(request.url).pathname))\n    if (protectedRoutes.includes(new URL(request.url).pathname)) {\n        const token = request.cookies.get('authToken');\n        if (!token) return NextResponse.redirect(new URL('/auth', request.url));\n\n        try {\n            console.log(`[middleware]: triggered Token`);\n            // TODO: use JOSE library to manage JWT\n\n            return NextResponse.next();\n        } catch (error) {\n            console.log(\"ERROR\", error);\n            return NextResponse.redirect(new URL('/auth', request.url));\n        }\n    }\n\n\n    // if ( availablePathNames.includes(request.url) ) return NextResponse.rewrite(new URL(`/404`, request.url));\n}\n\nexport const config = {\n    matcher: [\n        /*\n         * Match all request paths except for the ones starting with:\n         * - api (API routes)\n         * - _next/static (static files)\n         * - _next/image (image optimization files)\n         * - favicon.ico, sitemap.xml, robots.txt (metadata files)\n         */\n        '/((?!api|_next/static|_next/image|favicon.ico|sitemap.xml|robots.txt).*)',\n    ],\n}"],"names":[],"mappings":";;;;AAAA;AAAA;;AAIO,eAAe,WAAW,OAAoB;IACjD,MAAM,qBAAqB;QACvB;QACA;QACA;QACA;QACA;QACA;KACH;IACD,MAAM,kBAAkB;QACpB;QACA;KACH;IAED,QAAQ,GAAG,CAAC,gBAAgB,QAAQ,CAAC,IAAI,IAAI,QAAQ,GAAG,EAAE,QAAQ;IAClE,IAAI,gBAAgB,QAAQ,CAAC,IAAI,IAAI,QAAQ,GAAG,EAAE,QAAQ,GAAG;QACzD,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC;QAClC,IAAI,CAAC,OAAO,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,SAAS,QAAQ,GAAG;QAErE,IAAI;YACA,QAAQ,GAAG,CAAC,CAAC,6BAA6B,CAAC;YAC3C,uCAAuC;YAEvC,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;QAC5B,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC,SAAS;YACrB,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,SAAS,QAAQ,GAAG;QAC7D;IACJ;AAGA,6GAA6G;AACjH;AAEO,MAAM,SAAS;IAClB,SAAS;QACL;;;;;;SAMC,GACD;KACH;AACL"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}