{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Code/web/shopypal/webapp/db/index.ts"],"sourcesContent":["import mysql from 'mysql2/promise';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst pool = mysql.createPool({\n    host: process.env.DB_HOST?.toString() || 'localhost',\n    port: 3306,\n    user: process.env.DB_USER,\n    password: process.env.DB_PASSWORD,\n    database: process.env.DB_NAME,\n    waitForConnections: true,\n    connectionLimit: 10,\n    queueLimit: 0,\n});\nexport default pool;"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,uIAAA,CAAA,UAAM,CAAC,MAAM;AAEb,MAAM,OAAO,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;IAC1B,MAAM,QAAQ,GAAG,CAAC,OAAO,EAAE,cAAc;IACzC,MAAM;IACN,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,UAAU,QAAQ,GAAG,CAAC,WAAW;IACjC,UAAU,QAAQ,GAAG,CAAC,OAAO;IAC7B,oBAAoB;IACpB,iBAAiB;IACjB,YAAY;AAChB;uCACe"}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Code/web/shopypal/webapp/utils/authManager.ts"],"sourcesContent":["import {compare, genSalt, hash} from 'bcrypt-ts';\nimport pool from '@/db/index';\nimport {generateCustomUuid} from \"custom-uuid\";\nimport jwt from \"jsonwebtoken\";\nimport dotenv from \"dotenv\";\nimport { jwtDecode } from \"jwt-decode\";\n\nimport User from '@/types/user';\n\ndotenv.config();\n\nexport default class AuthManager {\n\n    static async login(email: string, password: string) {\n        const [rows] = await pool.query('SELECT * FROM user_credentials WHERE email = ?', [email]) as any;\n        const user = rows[0];\n        if (!user) return {message: 'User not found', token: null, receivedBody: null};\n\n        const validPassword = await compare(password, user.password);\n        if (!validPassword) return {message: 'Invalid password', token: null, receivedBody: null};\n\n        return {message: 'User connected', token: 'fake-jwt-token', receivedBody: user};\n    }\n\n    static async register(email: string, password: string, firstname: string, lastname: string) {\n        const [rows] = await pool.query('SELECT * FROM user_credentials WHERE email = ?', [email]) as any;\n        const user = rows[0];\n\n        if (user) return {message: 'User already exists'};\n\n        const salt = await genSalt(10);\n        const hashedPassword = await hash(password, salt);\n\n        const userId = generateCustomUuid(\"123456789\", 9);\n\n        try {\n\n            await pool.query('INSERT INTO roles (id, name) VALUES (?, ?)', [userId, 'user']);\n            await pool.query('INSERT INTO user_profiles (id, firstname, lastname) VALUES (?, ?, ?)', [userId, firstname, lastname]);\n            await pool.query('INSERT INTO user_credentials (id, email, password) VALUES (?, ?, ?)', [userId, email, hashedPassword]);\n        } catch (error) {\n            console.error('Error inserting user data:', error);\n            return {message: 'Error creating user'};\n        }\n        const userProfile = {id: userId, firstname, lastname};\n        return {\n            message: 'User created', token: 'fake-jwt-token', receivedBody: userProfile\n        }\n    }\n\n    static async generateJwtToken(email: string) {\n        if (!process.env.JWT_SECRET) return {message: ' Server error - JWT_SECRET not defined', token: null};\n        const user = await pool.query('SELECT id FROM user_credentials WHERE email = ?', [email]);\n        if (!user) return {message: 'User not found', token: null};\n        const userID: any = user[0];\n\n        return jwt.sign({\n            userID: userID[0].id,\n            email: email,\n        }, process.env.JWT_SECRET, {expiresIn: '5h'});\n    }\n\n    static async verifyJwtToken(token: any) {\n        if (!process.env.JWT_SECRET) return {message: ' Server error - JWT_SECRET not defined', token: null};\n        return jwt.verify(token, process.env.JWT_SECRET);\n    }\n\n    static getUserIDFromToken(token: any) {\n       if (!token) return {message: 'No token provided', token: null};\n        const decodedJWT: any = jwtDecode(token);\n        return decodedJWT.userID;\n    }\n\n    static async getUserProfile(userID: any): Promise<User> {\n        const querry = `\n            SELECT user_profiles.*, user_credentials.email\n            FROM user_profiles\n                     LEFT JOIN user_credentials\n                        ON user_profiles.id = user_credentials.id\n            WHERE user_profiles.id = ?`\nconst [rows] = await pool.query(querry, [userID]) as any;\n        return {\n           ...rows[0]\n        };\n    }\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Code/web/shopypal/webapp/app/api/auth/verify/route.ts"],"sourcesContent":["import {cookies} from \"next/headers\";\nimport pool from \"@/db\";\nimport AuthManager from \"@/utils/authManager\";\n\nexport async function GET(request: Request) {\n    try {\n        const cookieStore = await cookies();\n        const token = cookieStore.get('authToken');\n        const userIsAuthenticated = cookieStore.has('authToken');\n        if (!token) return Response.redirect(`${process.env.NUXT_URL}/auth`);\n\n        AuthManager.verifyJwtToken(token.value.toString())\n        .catch((err) => {\n            if (err.name === 'TokenExpiredError') {\n                cookieStore.delete('authToken');\n                return Response.redirect(`${process.env.NUXT_URL}/auth`);\n            } else {\n                console.log(err);\n            }\n        })\n\n        const decodedToken = userIsAuthenticated ? await AuthManager.verifyJwtToken(token.value.toString()) : false;\n\n        if (!decodedToken) {\n            try {\n                cookieStore.delete('authToken');\n            } finally {\n                Response.json({isAuthenticated: false}, {status: 200});\n            }\n        }\n\n        if (typeof decodedToken === 'object') {\n            for (const key in decodedToken) {\n                if (!decodedToken.hasOwnProperty(key)) break;\n\n                const value = decodedToken[key];\n                const user = await pool.query('SELECT * FROM user_profiles WHERE id = ?', [value]);\n                if (!user) {\n                    try {\n                        cookieStore.delete('authToken');\n                    } finally {\n                        Response.json({isAuthenticated: false}, {status: 200});\n                    }\n                }\n                return Response.json({isAuthenticated: true}, {status: 200});\n            }\n        }\n    } catch (error: any) {\n        console.error(error);\n        // console.log(error.message)\n        return Response.json({isAuthenticated: 'An error occurred'}, {status: 200});\n    }\n\n    // return Response.redirect(`${process.env.NUXT_URL}/auth`);\n    return Response.json({isAuthenticated: false}, {status: 200});\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,IAAI,OAAgB;IACtC,IAAI;QACA,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;QAChC,MAAM,QAAQ,YAAY,GAAG,CAAC;QAC9B,MAAM,sBAAsB,YAAY,GAAG,CAAC;QAC5C,IAAI,CAAC,OAAO,OAAO,SAAS,QAAQ,CAAC,GAAG,QAAQ,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC;QAEnE,sHAAA,CAAA,UAAW,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,QAAQ,IAC9C,KAAK,CAAC,CAAC;YACJ,IAAI,IAAI,IAAI,KAAK,qBAAqB;gBAClC,YAAY,MAAM,CAAC;gBACnB,OAAO,SAAS,QAAQ,CAAC,GAAG,QAAQ,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC;YAC3D,OAAO;gBACH,QAAQ,GAAG,CAAC;YAChB;QACJ;QAEA,MAAM,eAAe,sBAAsB,MAAM,sHAAA,CAAA,UAAW,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,QAAQ,MAAM;QAEtG,IAAI,CAAC,cAAc;YACf,IAAI;gBACA,YAAY,MAAM,CAAC;YACvB,SAAU;gBACN,SAAS,IAAI,CAAC;oBAAC,iBAAiB;gBAAK,GAAG;oBAAC,QAAQ;gBAAG;YACxD;QACJ;QAEA,IAAI,OAAO,iBAAiB,UAAU;YAClC,IAAK,MAAM,OAAO,aAAc;gBAC5B,IAAI,CAAC,aAAa,cAAc,CAAC,MAAM;gBAEvC,MAAM,QAAQ,YAAY,CAAC,IAAI;gBAC/B,MAAM,OAAO,MAAM,6GAAA,CAAA,UAAI,CAAC,KAAK,CAAC,4CAA4C;oBAAC;iBAAM;gBACjF,IAAI,CAAC,MAAM;oBACP,IAAI;wBACA,YAAY,MAAM,CAAC;oBACvB,SAAU;wBACN,SAAS,IAAI,CAAC;4BAAC,iBAAiB;wBAAK,GAAG;4BAAC,QAAQ;wBAAG;oBACxD;gBACJ;gBACA,OAAO,SAAS,IAAI,CAAC;oBAAC,iBAAiB;gBAAI,GAAG;oBAAC,QAAQ;gBAAG;YAC9D;QACJ;IACJ,EAAE,OAAO,OAAY;QACjB,QAAQ,KAAK,CAAC;QACd,6BAA6B;QAC7B,OAAO,SAAS,IAAI,CAAC;YAAC,iBAAiB;QAAmB,GAAG;YAAC,QAAQ;QAAG;IAC7E;IAEA,4DAA4D;IAC5D,OAAO,SAAS,IAAI,CAAC;QAAC,iBAAiB;IAAK,GAAG;QAAC,QAAQ;IAAG;AAC/D"}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}